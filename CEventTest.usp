DIGITAL_INPUT test1,test2; 

CEvent myEvent;

Function ShowEventUsage() {
	INTEGER retVal; 
	// Wait on the event to happen.
	// By default the event is signaled so the first time we come into this function the event will be signaled and we 
	// will fall through. Subsequent calls will block until the event is signaled using the Set method 
	// The wait takes a timeout parameter in milliseconds. Pass a -1 for an INFINITE WAIT and a 0 for no timeout
	
	do {
		print(" Waiting for event to get signaled \r\n"); 
		retVal = myEvent.Wait(-1); 
		if (retVal = 1) print(" Event signaled \r\n"); 
		else print(" Event wait failed - Event not signaled \r\n"); 
	}
	until (0); 
}

PUSH test1 {
	INTEGER retVal; 
	retVal = myEvent.Set();   
	print(" Signaling event Now. Returned %ld \r\n", retVal); 
}

RELEASE test1 {
}



PUSH test2 {
}

RELEASE test2 {
}

Function Main() {
	WaitForInitializationComplete(); 
	// Invoke the function - event will be triggered once since it is set on startup
	ShowEventUsage(); 
}